server:
  port: 1111
  max-http-header-size: 16KB
#  tomcat: 
#    accept-count: 1024
#    max-threads: 1024
#    max-connections: 2000
  undertow:
    io-threads: 16
    worker-threads: 256
    buffer-size: 1024
    direct-buffers: true 
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      
eureka:
  datacenter: czyl
  environment: prod
  server:
    wait-time-in-ms-when-sync-empty: 0   #在eureka服务器获取不到集群里对等服务器上的实例时，需要等待的时间，单机默认0
    shouldUseReadOnlyResponseCache: true #eureka是CAP理论种基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭
    enable-self-preservation: false    #关闭服务器自我保护，客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务
    eviction-interval-timer-in-ms: 5000 #清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#
    response-cache-update-interval-ms: 3000  ##eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上 #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上默认30s
    response-cache-auto-expiration-in-seconds: 10   ##eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
  client: 
    register-with-eureka: true  #false:不作为一个客户端注册到注册中心,是否将自身的实例信息注册到eureka服务器
    fetch-registry: false      #为true时，可以启动，但报异常：Cannot execute request on any known server ，是否从eureka服务端获取注册信息，消费者需要配置true
    instance-info-replication-interval-seconds: 10 
    registry-fetch-interval-seconds: 30  #从eureka服务端获取注册信息的间隔时间
    service-url:
      defaultZone: http://admin:554BCAF092D8D1ED3936C0CB09E91AF1@register.com:1111/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 5    ## 续约更新时间间隔（默认30秒），eureka客户端向服务端发送心跳的时间间隔
    lease-expiration-duration-in-seconds: 15 # 续约到期时间（默认90秒）
ribbon:
  ServerListRefreshInterval: 1000    #刷新服务列表源的间隔时间
logging:
  level:
#    root: INFO
    com.netflix: OFF
    com.open.capacity: INFO  
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
#turbine:
#  app-config:  auth-gateway,admin-server,auth-server,eureka-server	,user-center	               #需要监控的服务名
#  aggregator:
#    cluster-config: default   #需要监控的服务集群名
#  cluster-name-expression: new String("default")
#  combine-host-port: true
#  instanceUrlSuffix:
#      default: actuator/hystrix.stream    #key是clusterConfig集群的名字，value是hystrix监控的后缀，springboot2.0为actuator/hystrix.stream
##http://localhost:1111/turbine.stream