<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czyl.project.report.mapper.RepTemplateSemanticMapper">
    
    <resultMap type="RepTemplateSemantic" id="RepTemplateSemanticResult">
        <result property="pkTemplateSemantic"    column="pk_template_semantic"    />
        <result property="pkTemplate"    column="pk_template"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="version"    column="version"    />
        <result property="description"    column="description"    />
        <result property="dr"    column="dr"    />
        <result property="pkSemantic"    column="pk_semantic"    />
    </resultMap>

    <sql id="selectRepTemplateSemanticVo">
        select pk_template_semantic, pk_template, create_by, create_time, version, description, dr, pk_semantic from rep_template_semantic
    </sql>

    <select id="selectRepTemplateSemanticList" parameterType="RepTemplateSemantic" resultMap="RepTemplateSemanticResult">
        <include refid="selectRepTemplateSemanticVo"/>
        <where>  
            <if test="pkTemplate != null  and pkTemplate != ''"> and pk_template = #{pkTemplate}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="pkSemantic != null  and pkSemantic != ''"> and pk_semantic = #{pkSemantic}</if>
        </where>
    </select>
    
    <select id="selectRepTemplateSemanticById" parameterType="Long" resultMap="RepTemplateSemanticResult">
        <include refid="selectRepTemplateSemanticVo"/>
        where pk_template_semantic = #{pkTemplateSemantic}
    </select>
        
    <insert id="insertRepTemplateSemantic" parameterType="RepTemplateSemantic">
        insert into rep_template_semantic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pkTemplateSemantic != null ">pk_template_semantic,</if>
            <if test="pkTemplate != null  and pkTemplate != ''">pk_template,</if>
            <if test="createBy != null ">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="version != null ">version,</if>
            <if test="description != null  and description != ''">description,</if>
            <if test="dr != null ">dr,</if>
            <if test="pkSemantic != null  and pkSemantic != ''">pk_semantic,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pkTemplateSemantic != null ">#{pkTemplateSemantic},</if>
            <if test="pkTemplate != null  and pkTemplate != ''">#{pkTemplate},</if>
            <if test="createBy != null ">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="version != null ">#{version},</if>
            <if test="description != null  and description != ''">#{description},</if>
            <if test="dr != null ">#{dr},</if>
            <if test="pkSemantic != null  and pkSemantic != ''">#{pkSemantic},</if>
         </trim>
    </insert>

    <update id="updateRepTemplateSemantic" parameterType="RepTemplateSemantic">
        update rep_template_semantic
        <trim prefix="SET" suffixOverrides=",">
            <if test="pkTemplate != null  and pkTemplate != ''">pk_template = #{pkTemplate},</if>
            <if test="createBy != null ">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="version != null ">version = #{version},</if>
            <if test="description != null  and description != ''">description = #{description},</if>
            <if test="dr != null ">dr = #{dr},</if>
            <if test="pkSemantic != null  and pkSemantic != ''">pk_semantic = #{pkSemantic},</if>
        </trim>
        where pk_template_semantic = #{pkTemplateSemantic}
    </update>

    <delete id="deleteRepTemplateSemanticById" parameterType="Long">
        delete from rep_template_semantic where pk_template_semantic = #{pkTemplateSemantic}
    </delete>

    <delete id="deleteRepTemplateSemanticByIds" parameterType="String">
        delete from rep_template_semantic where pk_template_semantic in 
        <foreach item="pkTemplateSemantic" collection="array" open="(" separator="," close=")">
            #{pkTemplateSemantic}
        </foreach>
    </delete>
    
</mapper>