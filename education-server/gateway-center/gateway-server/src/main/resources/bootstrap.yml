#端口
server:
  port: 9001
  undertow:
    io-threads: 16
    worker-threads: 256
    buffer-size: 1024
    direct-buffers: true 
#服务名称
spring:
  application:
    name: gateway-server
  main:
    allow-bean-definition-overriding: true   
    
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always   


#设置最大超时时间
ribbon:  
  eager-load:
    enabled: true 
  ServerListRefreshInterval: 10  #刷新服务列表源的间隔时间
  #对所有的操作进行重试（默认是false）
  OkToRetryOnAllOperations: false
  #每个节点的重试次数
  MaxAutoRetries: 1
  #最多重试几个节点
  MaxAutoRetriesNextServer: 1
  #ribbon转发后台服务的最大读取时间
  ReadTimeout: 90000  
  #ribbon转发后台服务的最大连接时间
  ConnectTimeout: 90000 
  #Ribbon允许最大连接数，即所有后端微服务实例请求并发数之和的最大值。
  MaxTotalConnections: 60000
  #单个后端微服务实例能接收的最大请求并发数  
  MaxConnectionsPerHost: 2000


#设置最大容错超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 90000 
  threadpool:
    default:
      coreSize: 100
      #最大线程数量
      maximumSize: 1000
      #是否让maximumSize生效，false的话则只有coreSize会生效
      allowMaximumSizeToDivergeFromCoreSize: true
      #线程池的队列大小，-1代表使用SynchronousQueue队列
      maxQueueSize: -1

##feign参数优化
feign:
  client:
    config: 
      default:  
        loggerLevel: full  ## 配合logging.level=trace debug用于开发调式日志
  compression:
    request:
      enabled: true
      mine-types: text/xml,application/xml,application/json  
      min-request-size: 2048
    response:
      enabled: true       

#eureka client 配置          
eureka:
  client:
    serviceUrl:
      defaultZone:  http://admin:554BCAF092D8D1ED3936C0CB09E91AF1@register.com:1111/eureka  #http://130.75.131.241:8761/eureka,http://130.75.131.248:8762/eureka
    registry-fetch-interval-seconds: 10  
    instance-info-replication-interval-seconds: 10  
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
#    instance-id: ${spring.application.name}:${docker.ipAddress}:${spring.application.instance_id:${server.port}}
#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${randomServerPort.value[8000,8000]}}
    lease-renewal-interval-in-seconds: 5  #每隔几秒告诉eureka服务器我还存活，用于心跳检测
    lease-expiration-duration-in-seconds: 10 #如果心跳检测一直没有发送，10秒后会从eureka服务器中将此服务剔除
    #注册实例文档
#    status-page-url: http://${spring.cloud.client.ip-address}:${randomServerPort.value[8000,8000]}/document.html # 随机端口
    status-page-url:  http://${spring.cloud.client.ip-address}:${server.port}/doc.html
#    status-page-url: http://${docker.ipAddress}:${server.port}/auth/doc.html # 固定端口

        
 