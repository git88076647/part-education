<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czyl.project.system.mapper.SysSchemeTplMapper">
    
    <resultMap type="SysSchemeTpl" id="SysSchemeTplResult">
        <result property="userId"    column="user_id"    />
        <result property="content"    column="content"    />
        <result property="name"    column="name"    />
        <result property="typecode"    column="typecode"    />
        <result property="id"    column="id"    />
    </resultMap>

    <sql id="selectSysSchemeTplVo">
        select t.user_id,t.name, t.typecode, t.id from sys_scheme_tpl t
    </sql>

    <select id="selectList" parameterType="SysSchemeTpl" resultMap="SysSchemeTplResult">
        <include refid="selectSysSchemeTplVo"/>
        <where>
            <if test="userId != null  and userId >0"> and t.user_id = #{userId}</if>
            <if test="name != null  and name != ''"> and t.name like concat('%', #{name}, '%')</if>
            <if test="typecode != null and typecode != '' "> and t.typecode = #{typecode}</if>

            <if test="userIds != null and userIds.size > 0">
                and t.user_id  in
                <foreach item="item" collection="userIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    
    <select id="selectById" parameterType="Long" resultMap="SysSchemeTplResult">
        select * from sys_scheme_tpl t
        where t.id = #{id}
    </select>
        
    <insert id="insert" parameterType="SysSchemeTpl">
        insert into sys_scheme_tpl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null ">user_id,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="typecode != null  and typecode != ''">typecode,</if>
            <if test="id != null ">id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null ">#{userId},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="typecode != null  and typecode != ''">#{typecode},</if>
            <if test="id != null ">#{id},</if>
         </trim>
    </insert>
    
    <insert id="insertBatch" >
        insert into sys_scheme_tpl
        (user_id, content, name, typecode, id  ) values
		<foreach collection="list" item="item" index="index" separator=",">
      	(#{item.userId}, #{item.content}, #{item.name}, #{item.typecode}, #{item.id}  )
        </foreach>
    </insert>

    <update id="update" parameterType="SysSchemeTpl">
        update sys_scheme_tpl
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="content != null ">content = #{content},</if>
            <if test="name != null ">name = #{name},</if>
            <if test="typecode != null ">typecode = #{typecode},</if>
        </trim>
        where id = #{id}
    </update>
    
    <update id="updateBatch" >
      <foreach collection="list" item="item" index="index" separator=";">
        update sys_scheme_tpl
        <trim prefix="SET" suffixOverrides=",">
            <if test="item.userId != null ">user_id = #{item.userId},</if>
            <if test="item.content != null ">content = #{item.content},</if>
            <if test="item.name != null ">name = #{item.name},</if>
            <if test="item.typecode != null ">typecode = #{item.typecode},</if>
        </trim>
        where id = #{item.id}
      </foreach>
    </update>

    <delete id="deleteById" parameterType="Long">
      delete from sys_scheme_tpl 
      where id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="String">
      delete from sys_scheme_tpl 
      where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>